<p>
	<label for="repository_extra_git_daemon"><%= l(:field_git_daemon) %>:</label>
	<select id="repository_extra_git_daemon" name="repository_extra[git_daemon]">
		<option <%= GitHostingHelper.git_daemon_enabled(@repository, 0) %> value="0"><%= l(:label_disabled) %></option>
		<%- if @repository.project.is_public? -%>
		<option <%= GitHostingHelper.git_daemon_enabled(@repository, 1) %> value="1"><%= l(:label_enabled) %></option>
		<%- end -%>
	</select>
</p>

<p>
	<label for="repository_extra_git_http"><%= l(:field_git_http) %>:</label>
	<select id="repository_extra_git_http" name="repository_extra[git_http]">
		<option <%= GitHostingHelper.git_http_enabled(@repository, 0) %> value="0"><%= l(:label_disabled) %></option>
		<option <%= GitHostingHelper.git_http_enabled(@repository, 1) %> value="1"><%= l(:label_https_only) %></option>
		<option <%= GitHostingHelper.git_http_enabled(@repository, 2) %> value="2"><%= l(:label_https_and_http) %></option>
	</select>
</p>

<p>
	<label for="notify_cia"><%= l(:field_notify_cia) %>:</label>
	<select id="repository_extra_notify_cia" name="repository_extra[notify_cia]">
		<option <%= GitHostingHelper.git_notify_cia(@repository, 0) %> value="0"><%= l(:label_disabled) %></option>
		<option <%= GitHostingHelper.git_notify_cia(@repository, 1) %> value="1"><%= l(:label_enabled) %></option>
	</select>
	<% if GitHostingHelper.git_notify_cia(@repository, 1) != "" %>
	<a id="notify_cia_test" href="<%= url_for(:controller => "gitolite_hooks", :action => "test", :project_id => @repository.project.identifier) %>"><%= l(:field_notify_cia_test) %></a>
	<em><b><span id="notify_cia_result"></span></b></em>
	<% end %>
</p>








<%= javascript_include_tag('notify_cia_test', :plugin => 'redmine_git_hosting') %>
<br/>

<% if @repository.project.module_enabled?(:repository_mirrors) and GitHostingHelper.can_create_mirrors(@repository.project) %>
<div class="contextual">
	<%= link_to("Add Repository Mirror", url_for(:controller => 'repository_mirrors', :action => 'create', :project_id => repository.project.identifier), :class => 'icon icon-add add-mirror') %>
</div>
<% end %>

<% if @repository.project.module_enabled?(:repository_mirrors) and GitHostingHelper.can_view_mirrors(@repository.project) %>
	<h2>Mirrors</h2>
	<% if @repository.project.repository_mirrors.any? %>
	<div class="autoscroll">
	<table class="list" style="margin: 0 auto; width: 96%">
		<thead>
			<tr>
				<th>URL</th>
				<th>Active</th>
				<th>Created At</th>
				<th>Updated At</th>
				<th>&nbsp;</th>
			</tr>
		</thead>
		<tbody>
		<% @repository.project.repository_mirrors.each do |mirror| %>
			<tr class="<%= cycle('odd', 'even') %>">
				<td class="name"><%= link_to(h(mirror.url), url_for(:controller => 'repository_mirrors', :action => 'edit', :project_id => repository.project.identifier, :id => mirror.id), :class => 'edit-mirror') %></td>
				<td class="center"><%= checked_image mirror.active? %></td>
				<td align="center"><%= h(format_date(mirror.created_at)) %></td>
				<td align="center"><%= h(format_date(mirror.updated_at)) %></td>
				<td class="buttons"><% if GitHostingHelper.can_edit_mirrors(@repository.project) %>
					<%= link_to(l(:button_edit), url_for(:controller => 'repository_mirrors', :action => 'edit', :project_id => repository.project.identifier, :id => mirror.id), :class => 'icon icon-edit edit-mirror') %>
					<%= link_to(l(:button_delete), url_for(:controller => 'repository_mirrors', :action => 'destroy', :project_id => repository.project.identifier, :id => mirror.id), :class => 'icon icon-del delete-mirror') %>
				<% end %></td>
			</tr>
		<% end %>
		</tbody>
	</table>
	</div>
	<% else %>
	<p class="nodata" style="margin: 0 auto; width: 96%; padding: 8px;">No Mirrors Defined</p>
	<% end %>
<% end %>

<%= stylesheet_link_tag('modalbox/modalbox', :plugin => 'redmine_git_hosting') %>
<%= javascript_include_tag('modalbox/lib/builder', :plugin => 'redmine_git_hosting') %>
<%= javascript_include_tag('modalbox/modalbox', :plugin => 'redmine_git_hosting') %>

<script type="text/javascript">
	document.observe("dom:loaded", function() {
		$$(".add-mirror").each(function(elem) {
			Event.observe(elem, 'click', function(event) {
				Event.stop(event);
				Modalbox.show(
					elem.href, {
						title: "<%=l(:label_mirror_create)%>",
						width: 700
					}
				)
				return false;
			})
		})
		$$(".edit-mirror").each(function(elem) {
			Event.observe(elem, 'click', function(event) {
				Event.stop(event);
				Modalbox.show(
					elem.href, {
						title: "<%=l(:label_mirror_edit)%>",
						width: 700
					}
				)
				return false;
			})
		})
		$$(".delete-mirror").each(function(elem) {
			Event.observe(elem, 'click', function(event) {
				Event.stop(event);
				Modalbox.show(
					elem.href, {
						title: "<%=l(:label_mirror_delete)%>",
						width: 700
					}
				)
				return false;
			})
		})
	})
</script>
